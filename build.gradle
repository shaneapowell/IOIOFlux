

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('com.android.tools.build:gradle:1.0.0')
        classpath('com.jakewharton.sdkmanager:gradle-plugin:0.12.+')
//        classpath 'com.jakewharton.hugo:hugo-plugin:1.1.0'
    }
}


repositories {
    mavenCentral()
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'idea'
//apply plugin: 'hugo'


idea {
    module {
        name = 'IOIOFlux'
    }
}

dependencies {

}

android {

    compileSdkVersion("Google Inc.:Google APIs:19")
    buildToolsVersion("21.1.2")

    sourceSets {

        main {
            /* Core IOIO lib */
            java.srcDir('libs/ioioLib/IOIOLib/src')
            java.srcDir('libs/ioioLib/IOIOLib/target/android/src')

            /* Open Accessory */
            java.srcDir('libs/ioioLib/IOIOLibAccessory/src')

            /* Bluetooth */
            java.srcDir('libs/ioioLib/IOIOLibBT/src')


        }

    }

    defaultConfig {
        minSdkVersion(1)
        targetSdkVersion(19)
        versionCode(2)
        versionName("2.0")
    }

    signingConfigs {
        release {
//            apply from: "private/keys/IOIOFlux.properties"
//            storeFile file(RELEASE_STORE_FILE)
//            storePassword RELEASE_STORE_PASSWORD
//            keyAlias RELEASE_KEY_ALIAS
//            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}


/* Look for extract ioioLib directory, if it's not there, unzip the included zip file */
task extractIOIOLib(type: Copy) {

    def ioioLib = new File('libs/ioioLib')

    if (!ioioLib.isDirectory()) {
        println("Extracting IOIO Libs...")

        def libFile = new File('libs/App-IOIO0503.zip')

        from zipTree(libFile)
        into ioioLib

        }

}


build.dependsOn(extractIOIOLib)